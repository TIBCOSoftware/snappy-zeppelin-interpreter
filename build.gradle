group 'io.snappydata'
version '0.6-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'wrapper'
apply plugin: 'maven-publish'
apply plugin: 'maven'
apply plugin: 'signing'
apply plugin: 'distribution'


repositories {
    mavenCentral()
    maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
    maven { url "https://oss.sonatype.org/content/repositories/public" }
}

gradle.taskGraph.whenReady( { graph ->
    tasks.withType(Tar).each { tar ->
        tar.compression = Compression.GZIP
        tar.extension = 'tar.gz'
    }
})

ext {
    scalaBinaryVersion = '2.11'
    scalaVersion = scalaBinaryVersion + '.8'
    buildDir = 'build-artifacts'
    sparkVersion = '2.0.0'
    snappySparkVersion = '2.0.1-1'
    snappyDataVersion = '0.6-SNAPSHOT'
    gemfireVersion = "1.5.1-SNAPSHOT"
    zeppelinVersion = '0.6.1'
}

configurations {
    provided
    compile.extendsFrom provided
}
configurations.archives.with {
    artifacts.remove artifacts.find { it.archiveTask.is distTar}
    artifacts.remove artifacts.find { it.archiveTask.is distZip}
}
dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.11'
    compile group: 'org.apache.zeppelin', name: 'zeppelin-interpreter', version: zeppelinVersion
    compile group: 'org.apache.zeppelin', name: 'zeppelin-spark_2.11', version: zeppelinVersion
    compile group: 'org.apache.zeppelin', name: 'zeppelin-jdbc', version: zeppelinVersion
    compile group: 'org.apache.hadoop', name: 'hadoop-aws', version: '2.7.3'
    compile group: 'com.amazonaws', name: 'aws-java-sdk', version: '1.7.4'
    provided "io.snappydata:snappydata-core_" + scalaBinaryVersion + ":" + snappyDataVersion
    provided "org.scala-lang:scala-library:" + scalaVersion
    provided 'org.scala-lang:scala-reflect:' + scalaVersion
    provided 'org.scala-lang:scala-compiler:' + scalaVersion
    provided "io.snappydata:snappy-spark-repl_" + scalaBinaryVersion + ":" + snappySparkVersion
    provided "io.snappydata:snappy-spark-core_" + scalaBinaryVersion + ":" + snappySparkVersion
    //provided "io.snappydata:snappydata-cluster_" + scalaBinaryVersion + ":" + snappyDataVersion
    compile "io.snappydata:gemfire-core:" + gemfireVersion
}

jar {
    zip64 = true
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    dependsOn configurations.runtime
    from {
        (configurations.runtime - configurations.provided).collect {
            it.isDirectory() ? it : zipTree(it)
        }
    } {
        exclude "META-INF/*.SF"
        exclude "META-INF/*.DSA"
        exclude "META-INF/*.RSA"
    }
}

task packageSources(type: Jar, dependsOn: classes) {
    if (rootProject.hasProperty('enablePublish')) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }
}
task packageDocs(type: Jar, dependsOn: javadoc) {
    if (rootProject.hasProperty('enablePublish')) {
        classifier = 'javadoc'
        from javadoc
    }
}

artifacts {
    archives packageSources, packageDocs
}

distributions {
    main {
        baseName = 'snappydata-zeppelin'
        contents {
            from "${rootProject.buildDir}/libs/"
            from "src/main/resources/interpreter-setting.json"
            from "src/main/resources/ansi.sql.keywords"
        }
    }
}


distTar {
    dependsOn 'jar'
    classifier 'bin'
}



/*
//Used to generate and load maven artifacts
publishing {
    publications {
        interpreter(MavenPublication) {
            groupId 'org.apache.zeppelin'
            artifactId 'snappydata-zeppelin-interpreter'
            version version

           // artifact generateSnappydataZeppelinInterpreterJar
        }
    }
    repositories {
        maven {

            url "https://oss.sonatype.org/service/local/staging/deploy/maven2/"

            credentials {
                username ""
                password ""
            }
        }
    }
}
*/



uploadArchives {
    if (rootProject.hasProperty('enablePublish')) {
        signing {
            sign configurations.archives
        }
    }
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            //repository(url: "file://localhost/home/sachin/.m2/repository")
            repository(url: 'https://oss.sonatype.org/service/local/staging/deploy/maven2/') {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }
            snapshotRepository(url: 'https://oss.sonatype.org/content/repositories/snapshots/') {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }
            pom.project {
                name 'SnappyData'
                packaging 'jar'
                // optionally artifactId can be defined here
                description 'SnappyData distributed data store and execution engine'
                url 'http://www.snappydata.io'

                scm {
                    connection 'scm:git:https://github.com/SnappyDataInc/snappydata.git'
                    developerConnection 'scm:git:https://github.com/SnappyDataInc/snappydata.git'
                    url 'https://github.com/SnappyDataInc/snappydata'
                }

                licenses {
                    license {
                        name 'The Apache License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                developers {
                    developer {
                        id 'smenon'
                        name 'Sudhir Menon'
                        email 'smenon@snappydata.io'
                    }
                }
            }
        }
    }

    //Dependencies for pom generation
    dependencies {
        testCompile group: 'junit', name: 'junit', version: '4.11'
        compile group: 'org.apache.zeppelin', name: 'zeppelin-interpreter', version: zeppelinVersion
        compile group: 'org.apache.zeppelin', name: 'zeppelin-spark_2.11', version: zeppelinVersion
        compile group: 'org.apache.zeppelin', name: 'zeppelin-jdbc', version: zeppelinVersion
        compile "io.snappydata:snappydata-core_" + scalaBinaryVersion + ":" + snappyDataVersion
        compile "org.scala-lang:scala-library:" + scalaVersion
        compile 'org.scala-lang:scala-reflect:' + scalaVersion
        compile 'org.scala-lang:scala-compiler:' + scalaVersion
        compile "io.snappydata:snappy-spark-repl_" + scalaBinaryVersion + ":" + snappySparkVersion
        compile "io.snappydata:snappy-spark-core_" + scalaBinaryVersion + ":" + snappySparkVersion
        compile "io.snappydata:gemfire-core:" + gemfireVersion
        compile group: 'org.apache.hadoop', name: 'hadoop-aws', version: '2.7.3'
        compile group: 'com.amazonaws', name: 'aws-java-sdk', version: '1.7.4'
       //compile "io.snappydata:snappydata-cluster_" + scalaBinaryVersion + ":" + snappyDataVersion
    }
}

task publishLocal {
    dependsOn 'jar'
    dependsOn ':install'
}


task publishMaven {
    dependsOn ':uploadArchives'
}

def installer = install.repositories.mavenInstaller
def deployer = uploadArchives.repositories.mavenDeployer

[installer, deployer]*.pom*.whenConfigured {pom ->
    pom.dependencies.find {dep -> dep }.optional = true
}
