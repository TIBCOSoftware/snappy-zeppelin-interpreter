{"paragraphs":[{"text":"%angular\n<script>\n    function openSnappyPulse(){\n      var proto = window.location.protocol;\n      var currHost = window.location.host;\n      var pulseUrl = proto + '//' + currHost.substring(0, currHost.indexOf(':') + 1) + '5050/dashboard/';\n      window.open(pulseUrl, \"_blank\");\n    }\n</script>\n\n<div style=\"background-color:whitesmoke;\">\n<br>\n <span style=\"font-weight: bold; color:#428bca; cursor:pointer;\" onclick=\"openSnappyPulse();\">Monitoring Console </span>\n<br>\n<a href=\"#/notebook/2ETF88QQF\">Zeppelin Notebook Manager</a>\n<br>\n    \n<h4>Quickstarts</h4>\n&ensp;<a href=\"#/notebook/quickstart\" >Using Spark Scala API</a>\n<br>\n&ensp;<a href=\"#/notebook/2EVF37179\" >Using SQL</a>\n<br>\n&ensp;<a href=\"#/notebook/performance\">Performance Benchmark</a>\n<br>\n\n<h4><b>External Data Sources </b></h4>\n<!--&ensp;<a href=\"#/notebook/2EU4EJDHJ\">Load from External Data Sources</a>-->\n&ensp;<b><i>Load from External Data Sources</i></b>\n<br>\n&ensp;<a href=\"#/notebook/2EU6ZXZQJ\">Manage Connectors</a>\n<br>\n&ensp;<a href=\"#/notebook/2EUZ88BBY\">Data transformation examples</a>\n<br>\n\n<h4> Structured Streaming </h4>\n&ensp;<a href=\"#/notebook/2EUCAD6QP\">Example using file source</a>\n\n<h4> Demos with Big Datasets</h4>\n&ensp;<a href=\"#/notebook/airlineanalytics\">Airline Analytics Demo</a>\n<br>\n&ensp;<a href=\"#/notebook/nyctaxianalytics\">NYC Taxi Analytics Demo</a>\n<br>\n&ensp;<a href=\"#/notebook/2DKKFJNZR\">Performance Benchmark(S3 dataset)</a>\n<br>\n\n<h4>References</h4>\n&ensp;<a href=\"https://tibco-computedb.readthedocs.io/en/enterprise_docv1.2/\" target=\"_blank\">ComputeDB documentation</a>\n<br>\n&ensp;<a href=\"https://zeppelin.apache.org/docs/0.8.2/index.html\" target=\"_blank\">Zeppelin Documentation</a>\n</div>\n","user":"anonymous","dateUpdated":"2020-01-13T15:13:53+0530","config":{"tableHide":false,"editorSetting":{"language":"scala","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":2,"editorMode":"ace/mode/undefined","fontSize":9,"editorHide":true,"results":{},"enabled":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"ANGULAR","data":"<script>\n    function openSnappyPulse(){\n      var proto = window.location.protocol;\n      var currHost = window.location.host;\n      var pulseUrl = proto + '//' + currHost.substring(0, currHost.indexOf(':') + 1) + '5050/dashboard/';\n      window.open(pulseUrl, \"_blank\");\n    }\n</script>\n\n<div style=\"background-color:whitesmoke;\">\n<br>\n <span style=\"font-weight: bold; color:#428bca; cursor:pointer;\" onclick=\"openSnappyPulse();\">Monitoring Console </span>\n<br>\n<a href=\"#/notebook/2ETF88QQF\">Zeppelin Notebook Manager</a>\n<br>\n    \n<h4>Quickstarts</h4>\n&ensp;<a href=\"#/notebook/quickstart\" >Using Spark Scala API</a>\n<br>\n&ensp;<a href=\"#/notebook/2EVF37179\" >Using SQL</a>\n<br>\n&ensp;<a href=\"#/notebook/performance\">Performance Benchmark</a>\n<br>\n\n<h4><b>External Data Sources </b></h4>\n<!--&ensp;<a href=\"#/notebook/2EU4EJDHJ\">Load from External Data Sources</a>-->\n&ensp;<b><i>Load from External Data Sources</i></b>\n<br>\n&ensp;<a href=\"#/notebook/2EU6ZXZQJ\">Manage Connectors</a>\n<br>\n&ensp;<a href=\"#/notebook/2EUZ88BBY\">Data transformation examples</a>\n<br>\n\n<h4> Structured Streaming </h4>\n&ensp;<a href=\"#/notebook/2EUCAD6QP\">Example using file source</a>\n\n<h4> Demos with Big Datasets</h4>\n&ensp;<a href=\"#/notebook/airlineanalytics\">Airline Analytics Demo</a>\n<br>\n&ensp;<a href=\"#/notebook/nyctaxianalytics\">NYC Taxi Analytics Demo</a>\n<br>\n&ensp;<a href=\"#/notebook/2DKKFJNZR\">Performance Benchmark(S3 dataset)</a>\n<br>\n\n<h4>References</h4>\n&ensp;<a href=\"https://tibco-computedb.readthedocs.io/en/enterprise_docv1.2/\" target=\"_blank\">ComputeDB documentation</a>\n<br>\n&ensp;<a href=\"https://zeppelin.apache.org/docs/0.8.2/index.html\" target=\"_blank\">Zeppelin Documentation</a>\n</div>"}]},"apps":[],"jobName":"paragraph_1578908633515_-224508481","id":"20191205-095718_1388378696","dateCreated":"2020-01-13T15:13:53+0530","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:28081"},{"text":"%angular\n<div style=\"background-color:whitesmoke;\">\n<h2>Load from files in cloud storages (AWS,HDFS, GCS, Azure)</h2>\n<ul>\n<li>This notebook allows you to register external data sets sourced from files. More information available <a href=\"https://tibco-computedb.readthedocs.io/en/enterprise_docv1.2/reference/sql_reference/create-external-table/\"> here</a>.</li>\n<li>We support the following sources: S3, HDFS, GCS, Windows Azure blob storage (WASB), local file system ( To use any other data source, please refer to the <a href=\"#/notebook/2EU6ZXZQJ\">manage connectors notebook</a>) <br/> and the following formats: CSV, Text, JSON, Parquet, ORC, XML and AVRO.</li> \n<li> Monitor the Cluster, check memory consumption using <span style=\"font-weight: bold; color:#428bca; cursor:pointer;\" onclick=\"openSnappyPulse();\">Monitoring Console </span> <br>The Dashboard tab can be used to monitor the cluster and check the memory consumed by the samples.</li>\n</ul>\n<h5 style=\"color:red;font-weight:bold\">Anonymous user needs to clone this notebook to execute the paragraphs. Clone option available in the pane next to name of the notebook at the top of the page.</h5>\n</div>","user":"anonymous","dateUpdated":"2020-01-13T15:13:53+0530","config":{"tableHide":false,"editorSetting":{"language":"scala","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":10,"editorMode":"ace/mode/undefined","editorHide":true,"fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"ANGULAR","data":"<div style=\"background-color:whitesmoke;\">\n<h2>Load from files in cloud storages (AWS,HDFS, GCS, Azure)</h2>\n<ul>\n<li>This notebook allows you to register external data sets sourced from files. More information available <a href=\"https://tibco-computedb.readthedocs.io/en/enterprise_docv1.2/reference/sql_reference/create-external-table/\"> here</a>.</li>\n<li>We support the following sources: S3, HDFS, GCS, Windows Azure blob storage (WASB), local file system ( To use any other data source, please refer to the <a href=\"#/notebook/2EU6ZXZQJ\">manage connectors notebook</a>) <br/> and the following formats: CSV, Text, JSON, Parquet, ORC, XML and AVRO.</li> \n<li> Monitor the Cluster, check memory consumption using <span style=\"font-weight: bold; color:#428bca; cursor:pointer;\" onclick=\"openSnappyPulse();\">Monitoring Console </span> <br>The Dashboard tab can be used to monitor the cluster and check the memory consumed by the samples.</li>\n</ul>\n<h5 style=\"color:red;font-weight:bold\">Anonymous user needs to clone this notebook to execute the paragraphs. Clone option available in the pane next to name of the notebook at the top of the page.</h5>\n</div>"}]},"apps":[],"jobName":"paragraph_1578908633516_2146217512","id":"20180523-182306_1939739509","dateCreated":"2020-01-13T15:13:53+0530","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:28082"},{"title":"STEP 1 : Select the source of the files and the data format","text":"%spark\n{\n    // To ensure object interpolation does not break.\n    z.put(\"datasetName\",\"invalid\")\n    z.put(\"path\",\"invalid\")\n    z.put(\"dataFormat\",\"invalid\")\n    z.put(\"aws_id\",\"invalid\")\n    z.put(\"aws_secret\",\"invalid\")\n    z.put(\"gcs_idpath\",\"invalid\")\n    z.put(\"csv_header\",\"invalid\")\n    z.put(\"inferSchema\",\"invalid\")\n    z.put(\"mode\",\"invalid\")\n    z.put(\"xml_rowTag\",\"invalid\")\n    z.put(\"source\",\"invalid\")\n    z.put(\"wasb_key\",\"invalid\")\n    z.put(\"wasb_path\",\"invalid\")\n    z.put(\"wasb_storage\",\"invalid\")\n    z.put(\"json_multiline\",\"invalid\")\n    z.put(\"csv_delimiter\",\"invalid\")\n    z.put(\"csv_encoding\",\"invalid\")\n\n    val datasetName = z.textbox(\"Name the dataset being created (ex. TestExternalTable)\").asInstanceOf[String]\n    val source = z.select(\"Select file source\", Seq((\"0\", \"None\"),\n                                        (\"1\",\"HDFS\"),\n                                        (\"2\",\"S3\"),\n                                        (\"3\",\"local Files\"),\n                                        (\"4\",\"GCS\"),\n                                        (\"5\",\"WASB\"))).asInstanceOf[String]\n    z.put(\"datasetName\", datasetName.asInstanceOf[String].toUpperCase)\n    z.put(\"source\", source)\n    val dataFormat = z.select(\"Data format\", Seq((\"None\",\"None\"),(\"CSV\",\"CSV\"),(\"Parquet\",\"Parquet\"),(\"JSON\",\"JSON\"), (\"ORC\",\"ORC\"), (\"AVRO\",\"AVRO\"),(\"XML\",\"XML\")))\n    z.put(\"dataFormat\", dataFormat)\n    if (source != \"0\" && dataFormat.asInstanceOf[String] != \"None\" && !datasetName.asInstanceOf[String].isEmpty) {\n       z.run(\"20180507-214355_143278230\")\n    } else {\n        println(s\"\"\"%html <span style=\"color:red;\"><h5> Please specify all parameters i.e. Dataset name(<b>registered as External table</b>), Source of files and File format.</h5></span>\"\"\")\n    }\n}","user":"anonymous","dateUpdated":"2020-01-13T15:13:53+0530","config":{"tableHide":false,"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":10,"editorMode":"ace/mode/scala","editorHide":true,"fontSize":9,"runOnSelectionChange":false,"title":true,"results":{},"enabled":true},"settings":{"params":{"day":"2","Select file source":"0","S3 access ID":"","S3 access secret":"","S3 bucket location":"zeppelindemo/airportdata_csv","Name the dataset being created:":"Test1","Data format":"None","Name the dataset being created (ex. TestExternalTable)":""},"forms":{"Name the dataset being created (ex. TestExternalTable)":{"type":"TextBox","name":"Name the dataset being created (ex. TestExternalTable)","displayName":"Name the dataset being created (ex. TestExternalTable)","defaultValue":"","hidden":false,"$$hashKey":"object:28238"},"Select file source":{"type":"Select","options":[{"value":"0","displayName":"None","$$hashKey":"object:28263"},{"value":"1","displayName":"HDFS","$$hashKey":"object:28264"},{"value":"2","displayName":"S3","$$hashKey":"object:28265"},{"value":"3","displayName":"local Files","$$hashKey":"object:28266"},{"value":"4","displayName":"GCS","$$hashKey":"object:28267"},{"value":"5","displayName":"WASB","$$hashKey":"object:28268"}],"name":"Select file source","displayName":"Select file source","defaultValue":"","hidden":false,"$$hashKey":"object:28239"},"Data format":{"type":"Select","options":[{"value":"None","displayName":"None","$$hashKey":"object:28275"},{"value":"CSV","displayName":"CSV","$$hashKey":"object:28276"},{"value":"Parquet","displayName":"Parquet","$$hashKey":"object:28277"},{"value":"JSON","displayName":"JSON","$$hashKey":"object:28278"},{"value":"ORC","displayName":"ORC","$$hashKey":"object:28279"},{"value":"AVRO","displayName":"AVRO","$$hashKey":"object:28280"},{"value":"XML","displayName":"XML","$$hashKey":"object:28281"}],"name":"Data format","displayName":"Data format","defaultValue":"","hidden":false,"$$hashKey":"object:28240"}}},"apps":[],"jobName":"paragraph_1578908633516_-65233751","id":"20180507-215201_1754631266","dateCreated":"2020-01-13T15:13:53+0530","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:28083"},{"title":"STEP 2 : Supply access credentials, options for Access","text":"%spark\nprintln(\"%html <h5> You will find description on the options in the product documentation or Spark connector docs.</h5>\")\n\n{\n    import org.apache.spark.sql._\n    \n    val source = z.get(\"source\")\n    if(source != \"0\" && source != \"3\" && source != \"invalid\") {\n       println(s\"\"\"%angular\n            <div style=\"color:red;background-color:whitesmoke;\">\n            <li><b>Access Credentials</b></li>\n            <ul>\n                <li>Please refer to security credentials guidelines in the product documentation <a href=\"https://tibco-computedb.readthedocs.io/en/enterprise_docv1.2/connectors/access_cloud_data/#using-hive-sitexml-file\" target=\"_blank\">here</a>.</li>\n                <li>The Zeppelin notebooks store state to disk. Using credentials via notebooks will result in them being written to disk. More about Zeppelin storage options is available <a href=\"https://zeppelin.apache.org/docs/0.8.0/setup/storage/storage.html\">here</a></li>\n                <li>If user still chooses to use notebooks as the mode of setting credentials, then user may clone this notebook and delete it immediately after completing use.</li>\n            </ul></div>\"\"\")\n    }\n    \n    if (source == \"1\") {\n      val id = z.textbox(\"HDFS name node, (ex. hadoop-hadoop-hdfs-nn:9000)\",\"\")\n      val filePath = z.textbox(\"File name (path), (ex. /testdata/AirlineDataWithRowID)\",\"\")\n      \n      val path = s\"hdfs://$id$filePath\"\n      z.put(\"path\", s\"$path\") \n    } else if (source == \"2\") {\n      z.put(\"aws_id\",z.textbox(\"S3 access ID\",\"\"))\n      z.put(\"aws_secret\",z.textbox(\"S3 access secret\",\"\"))\n      z.put(\"path\", s\"s3a://\" + z.textbox(\"S3 bucket location\", \"bucket/folder\").asInstanceOf[String])\n    } else if (source == \"3\"){\n      z.put(\"path\",z.textbox(\"Path to folder or file (Ex. /tmp/test.csv)\",\"\"))  \n    } else if (source == \"4\"){\n      z.put(\"gcs_idpath\",z.textbox(\"GCS key file path (ex. /home/user/credentials/keys.json)\",\"\"))\n      z.put(\"path\",\"gs://\" + z.textbox(\"GCS Bucket ID \",\"\"))\n    } else if(source == \"5\"){\n        val w_s = z.textbox(\"WASB Storage Account Name\")\n        z.put(\"wasb_key\",z.textbox(\"Azure Account Key\"))\n        z.put(\"path\",z.select(\"Protocol\",Seq((\"wasb\",\"wasb\"),(\"wasbs\",\"wasbs\"))) + s\"://\" + z.textbox(\"WASB Container Name\") + \"@\" + z.textbox(\"WASB Storage Account Name\") + s\".blob.core.windows.net\" + z.textbox(\"Path\",\"folder/times_orc.csv\"))\n        z.put(\"wasb_storage\",w_s)\n    }\n     def getCSVOptions(): Unit = {\n        z.put(\"csv_header\", z.select(\"Header in CSV file\", Seq((\"true\",\"true\"),(\"false\",\"false\"))).asInstanceOf[String])\n        z.put(\"inferSchema\", z.select(\"Infer schema\", Seq((\"true\",\"true\"),(\"false\",\"false\"))).asInstanceOf[String])\n        z.put(\"mode\", z.select(\"Mode for bad records\", Seq((\"DROPMALFORMED\",\"DROPMALFORMED\"),(\"FAILFAST\",\"FAILFAST\"))).asInstanceOf[String])\n        z.put(\"csv_delimiter\",z.textbox(\"Delimiter\",\",\").asInstanceOf[String])\n        z.put(\"csv_encoding\",z.textbox(\"encoding\",\"UTF-8\").asInstanceOf[String])\n     }\n     \n     def getXMLOptions(): Unit = {\n         z.put(\"xml_rowTag\",z.textbox(\"Row Tag (ex. books)\",\"\"))\n     }\n     def getJSONOptions(): Unit = {\n         z.put(\"json_multiline\",z.select(\"wholefile\", Seq((\"true\",\"true\"),(\"false\",\"false\"))).asInstanceOf[String])\n     }\n     \n     if(z.get(\"dataFormat\") == \"CSV\") getCSVOptions()\n     if(z.get(\"dataFormat\") == \"XML\") getXMLOptions()\n     if(z.get(\"dataFormat\") == \"JSON\") getJSONOptions()\n     if(source != \"0\" && source != \"invalid\" && z.get(\"dataFormat\") != \"None\" && z.get(\"dataFormat\") != \"invalid\" ) {\n        z.run(\"20191204-135732_1228283414\")\n     }else{\n        println(s\"\"\"%html <span style=\"color:red;\"><h5> Please specify all parameters in the previous paragraph i.e. Dataset name(<b>registered as External table</b>), Source of files (S3, GCS, HDFS or local files), File format (CSV, JSON, Text..) </h5></span>\"\"\") \n     }\n}","user":"anonymous","dateUpdated":"2020-01-13T15:13:53+0530","config":{"tableHide":false,"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":10,"editorMode":"ace/mode/scala","editorHide":true,"fontSize":9,"runOnSelectionChange":false,"title":true,"results":{"0":{"graph":{"mode":"table","height":300,"optionOpen":false},"helium":{}}},"enabled":true},"settings":{"params":{"S3 access ID":"","S3 access secret":"","S3 bucket location":"bucket/folder","Header in CSV file":"true","Infer schema":"true","Mode for bad records":"DROPMALFORMED","HDFS name node":"hadoop-hadoop-hdfs-nn:9000","File name (path)":"/AirlineDataWithRowID","Azure storage account":"shirishd","Azure container":"data","Azure key":"xxxx","Azure file path in container":"AirlineDataWithRowID","Row Tag (ex. books)":"test","HDFS name node ex. hadoop-hadoop-hdfs-nn:9000":"","File name (path) ex. /testdata/AirlineDataWithRowID":"","HDFS name node, ex. hadoop-hadoop-hdfs-nn:9000":"","File name (path), ex. /testdata/AirlineDataWithRowID":"","HDFS name node, (ex. hadoop-hadoop-hdfs-nn:9000)":"","File name (path), (ex. /testdata/AirlineDataWithRowID)":"","GCS key file path (ex. /home/user/credentials/keys.json)":"","GCS Bucket ID ":"","Path (Ex. /tmp/test.csv)":"/Users/jramnara/Downloads/sf_bike_sharing_data/projects/bike_sharing/201508_station_data.csv","Path to folder or file (Ex. /tmp/test.csv)":"/opt/TIB_compute_1.1.1_linux/quickstart/src/main/resources/customer_with_headers.csv","Azure Account Key":"testacc","Path":"/times_orc.csv","Protocol":"wasbs","WASB Container Name":"","WASB Storage Account Name":"storage"},"forms":{}},"apps":[],"jobName":"paragraph_1578908633517_732062851","id":"20180507-214355_143278230","dateCreated":"2020-01-13T15:13:53+0530","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:28084"},{"title":"[ Auto Run ] ","text":"%jdbc\nexec scala\nval datasetName = \"{datasetName}\"\nval path = \"{path}\"\nval dataFormat = \"{dataFormat}\"\nval aws_id = \"{aws_id}\"\nval aws_secret = \"{aws_secret}\"\nval gcs_idpath = \"{gcs_idpath}\"\nval csv_header = \"{csv_header}\"\nval inferSchema = \"{inferSchema}\"\nval mode = \"{mode}\"\nval xml_rowTag = \"{xml_rowTag}\"\nval source = \"{source}\"\nval wasb_key= \"{wasb_key}\"\nval wasb_path =\"{wasb_path}\"\nval wasb_storage = \"{wasb_storage}\"\nval json_multiline = \"{json_multiline}\"\nval csv_delimiter = \"{csv_delimiter}\"\nval csv_encoding = \"{csv_encoding}\"\n","user":"anonymous","dateUpdated":"2020-01-13T15:13:53+0530","config":{"tableHide":true,"editorSetting":{"language":"sql","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/sql","fontSize":9,"editorHide":true,"title":true,"results":{"0":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"C0":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}}},"1":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"C0":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}}},"9":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"C0":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}}},"10":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"C0":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}}}},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"C0\ndatasetName: String = {datasetName}\npath: String = {path}\ndataFormat: String = {dataFormat}\naws_id: String = {aws_id}\naws_secret: String = {aws_secret}\ngcs_idpath: String = {gcs_idpath}\ncsv_header: String = {csv_header}\ninferSchema: String = {inferSchema}\nmode: String = {mode}\nxml_rowTag: String = {xml_rowTag}\nsource: String = {source}\nwasb_key: String = {wasb_key}\nwasb_path: String = {wasb_path}\norg.apache.spark.sql.ParseException: Invalid input '{', expected identifierExt (line 1, column 22):\ndrop table if exists {datasetName}\n                     ^;\n  at org.apache.spark.sql.SnappyParser.parseSQLOnly(SnappyParser.scala:1374)\n  at org.apache.spark.sql.SnappyParser.parseSQL(SnappyParser.scala:1382)\n  at org.apache.spark.sql.SnappyParser.parse(SnappyParser.scala:1365)\n  at org.apache.spark.sql.SnappySqlParser.parsePlan(SnappySqlParser.scala:61)\n  at org.apache.spark.sql.SnappySession$.sqlPlan(SnappySession.scala:2480)\n  at org.apache.spark.sql.SnappySession$$anonfun$sqInternal$1.apply(SnappySession.scala:191)\n  at org.apache.spark.sql.SnappySession$$anonfun$sqInternal$1.apply(SnappySession.scala:191)\n  at org.apache.spark.sql.SnappyContextFunctions.sql(SnappyContextFunctions.scala:94)\n  at org.apache.spark.sql.SnappySession.sqInternal(SnappySession.scala:191)\n  at org.apache.spark.sql.SnappySession.sql(SnappySession.scala:180)\n  ... 33 elided\n"}]},"apps":[],"jobName":"paragraph_1578908633517_-736966262","id":"20191204-135732_1228283414","dateCreated":"2020-01-13T15:13:53+0530","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:28085"},{"title":"STEP 3 : Connect to source, Infer Schema, register in SnappyData Catalog as External table","text":"%jdbc\nexec scala\n{\n  \n  if (source == \"2\"){\n    org.apache.hadoop.fs.FileSystem.closeAll()\n    // Use APIs to deal with '/'(slashes) in the secret\n    sc.hadoopConfiguration.set(\"fs.s3a.access.key\", aws_id)\n    sc.hadoopConfiguration.set(\"fs.s3a.secret.key\", aws_secret)\n  } else if (source == \"4\"){\n    org.apache.hadoop.fs.FileSystem.closeAll()\n    sc.hadoopConfiguration.set(\"google.cloud.auth.service.account.json.keyfile\",gcs_idpath)\n  }  else if (source == \"5\"){\n    org.apache.hadoop.fs.FileSystem.closeAll()\n    sc.hadoopConfiguration.set(\"fs.azure\", \"org.apache.hadoop.fs.azure.NativeAzureFileSystem\")\n    sc.hadoopConfiguration.set(s\"fs.azure.account.key.$wasb_storage.blob.core.windows.net\", wasb_key)\n  }\n\n  snappy.sql(s\"drop table if exists $datasetName\")\n  val x = dataFormat match {\n      case \"CSV\" => snappy.sql(s\"create external table $datasetName using csv options( header '$csv_header', inferSchema '$inferSchema', mode '$mode', delimiter '$csv_delimiter',encoding '$csv_encoding', path '$path')\" )\n      case f@( \"Parquet\" | \"ORC\") => snappy.sql(s\"create external table $datasetName using $dataFormat options( path '$path')\" )\n      case \"JSON\" => snappy.sql(s\"create external table $datasetName using json options( path '$path', wholeFile '$json_multiline')\" )\n      case \"AVRO\" => snappy.sql(s\"create external table $datasetName using com.databricks.spark.avro options( path '$path')\" )\n      case \"XML\" => snappy.sql(s\"create external table $datasetName using com.databricks.spark.xml options( path '$path', rowTag '$xml_rowTag')\" )\n  }\n}\nsnappy.table(datasetName).printSchema\n ;\nexec scala options(returnDF 'dfPreview') val dfPreview = snappy.sql(s\"select * from $datasetName limit 10\")","user":"anonymous","dateUpdated":"2020-01-13T15:13:53+0530","config":{"editorSetting":{"language":"sql","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/sql","fontSize":9,"editorHide":true,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1578908633518_-1638767850","id":"20191212-090032_168217851","dateCreated":"2020-01-13T15:13:53+0530","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:28086"},{"title":"[ Optional ] STEP 4 : Transform/Shape your data for Analytics","text":"%angular\n<div style=\"background-color:whitesmoke;\">\n<h5> The Spark API (both native scala/python as well as Spark SQL) deliver powerful transformation capabilities.<br/> <a href=\"#/notebook/2EUZ88BBY\" target=\"_blank\"> Set of examples</a><span style=\"color:blue\">**</span> showcasing how you could\n    <ul>\n    <li>flatten with nested data structures (e.g. Avro or JSON)</li>\n    <li>pivot your data</li>\n    <li>add/remove new columns.</li>\n    \n    Search the net for <b><i>'Spark transformation examples'</i></b> for a treasure trove. </h5>\n    </ul>\n    <b><i> Note <br>\n    <ul>\n        <li>Nested data types are only supported in in-memory column tables.</li>\n        <li>If the nested datatypes are not flattened, then the summary statistics computation in Step 7 will produce an error.</li>\n        \n    </ul>\n    </i></b>\n<span style=\"color:blue\"><h5> <i><b>**</b> The examples use the Spark Dataframe API. <br/>\nTo acquire a Dataframe on your external table, use <b>'val df = snappy.table(\"yourTableName\")'</b></i></h5></span>\n</div>","user":"anonymous","dateUpdated":"2020-01-13T15:13:53+0530","config":{"tableHide":false,"editorSetting":{"language":"scala","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/undefined","fontSize":9,"editorHide":true,"title":true,"results":{},"enabled":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"ANGULAR","data":"<div style=\"background-color:whitesmoke;\">\n<h5> The Spark API (both native scala/python as well as Spark SQL) deliver powerful transformation capabilities.<br/> <a href=\"#/notebook/2EUZ88BBY\" target=\"_blank\"> Set of examples</a><span style=\"color:blue\">**</span> showcasing how you could\n    <ul>\n    <li>flatten with nested data structures (e.g. Avro or JSON)</li>\n    <li>pivot your data</li>\n    <li>add/remove new columns.</li>\n    \n    Search the net for <b><i>'Spark transformation examples'</i></b> for a treasure trove. </h5>\n    </ul>\n    <b><i> Note <br>\n    <ul>\n        <li>Nested data types are only supported in in-memory column tables.</li>\n        <li>If the nested datatypes are not flattened, then the summary statistics computation in Step 7 will produce an error.</li>\n        \n    </ul>\n    </i></b>\n<span style=\"color:blue\"><h5> <i><b>**</b> The examples use the Spark Dataframe API. <br/>\nTo acquire a Dataframe on your external table, use <b>'val df = snappy.table(\"yourTableName\")'</b></i></h5></span>\n</div>"}]},"apps":[],"jobName":"paragraph_1578908633518_-181101534","id":"20191204-003514_1183652928","dateCreated":"2020-01-13T15:13:53+0530","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:28087"},{"title":"[ Optional ] STEP 5 : Should I load data into memory ? ","text":"%angular\n<div style=\"background-color:whitesmoke\">\n<h5> Below paragraph creates a <b><i>in-memory table using 5% of randomly selected rows in the external table</b></i>. It extrapolates the output to estimate memory space that is required. <br/>\nConsult the dashboard to see if you can fit into memory or can live with disk overflow. Run below para to estimate memory requirements </h5>\n\n<span style=\"color:blue\"><b><i><h5>NOTE: Size estimation accuracy is low for small row counts </h5></b></i>\n</div>","user":"anonymous","dateUpdated":"2020-01-13T15:13:53+0530","config":{"tableHide":false,"editorSetting":{"language":"scala","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/undefined","fontSize":9,"editorHide":true,"title":true,"results":{},"enabled":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"ANGULAR","data":"<div style=\"background-color:whitesmoke\">\n<h5> Below paragraph creates a <b><i>in-memory table using 5% of randomly selected rows in the external table</b></i>. It extrapolates the output to estimate memory space that is required. <br/>\nConsult the dashboard to see if you can fit into memory or can live with disk overflow. Run below para to estimate memory requirements </h5>\n\n<span style=\"color:blue\"><b><i><h5>NOTE: Size estimation accuracy is low for small row counts </h5></b></i>\n</div>"}]},"apps":[],"jobName":"paragraph_1578908633518_-1543273151","id":"20191204-112653_1170688433","dateCreated":"2020-01-13T15:13:53+0530","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:28088"},{"title":"Estimate memory required to load into Row or Column table (loads 5% into temp Table)","text":"%jdbc\ndrop table if exists {datasetName}_TOBEDELETED;\ncreate table {datasetName}_TOBEDELETED using ${Select TableType=column, column|row} as (select * from {datasetName} where rand() < 0.05);\nselect tablename, is_column_table, (row_count *20) rowCount_est, (size_in_memory *20) memorySize_est, (total_size *20) totalSize_est from sys.tablestats where tablename like '%{datasetName}_TOBEDELETED'\n","user":"anonymous","dateUpdated":"2020-01-13T15:13:53+0530","config":{"editorSetting":{"language":"sql","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/sql","fontSize":9,"editorHide":true,"runOnSelectionChange":true,"title":true,"results":{"0":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"TABLENAME":"string","IS_COLUMN_TABLE":"string","ROWCOUNT_EST":"string","MEMORYSIZE_EST":"string","TOTALSIZE_EST":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}}},"2":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"TABLENAME":"string","IS_COLUMN_TABLE":"string","ROWCOUNT_EST":"string","MEMORYSIZE_EST":"string","TOTALSIZE_EST":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}}}},"enabled":true},"settings":{"params":{"Select TableType":"row"},"forms":{"Select TableType":{"type":"Select","options":[{"value":" column","$$hashKey":"object:28369"},{"value":"row","$$hashKey":"object:28370"}],"name":"Select TableType","defaultValue":"column","hidden":false,"$$hashKey":"object:28356"}}},"apps":[],"jobName":"paragraph_1578908633519_1411595165","id":"20191211-102559_100158480","dateCreated":"2020-01-13T15:13:53+0530","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:28089"},{"title":"[ Optional ] STEP 6 : Cache external table in ComputeDB (as Column or Row table)","text":"%jdbc\ndrop table if exists {datasetName}_CACHE;\ncreate table {datasetName}_CACHE using ${Select TableType=column, column|row} as (select * from {datasetName});\nselect tablename, is_column_table, row_count, size_in_memory, total_size from sys.tablestats where tablename like '%{datasetName}_CACHE';","user":"anonymous","dateUpdated":"2020-01-13T15:13:53+0530","config":{"editorSetting":{"language":"sql","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/sql","fontSize":9,"editorHide":true,"runOnSelectionChange":true,"title":true,"results":{"0":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"TABLENAME":"string","IS_COLUMN_TABLE":"string","ROW_COUNT":"string","SIZE_IN_MEMORY":"string","TOTAL_SIZE":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}}},"2":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"TABLENAME":"string","IS_COLUMN_TABLE":"string","ROW_COUNT":"string","SIZE_IN_MEMORY":"string","TOTAL_SIZE":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}}}},"enabled":true},"settings":{"params":{"Select TableType":" column"},"forms":{"Select TableType":{"type":"Select","options":[{"value":" column","$$hashKey":"object:28392"},{"value":"row","$$hashKey":"object:28393"}],"name":"Select TableType","defaultValue":"column","hidden":false,"$$hashKey":"object:28379"}}},"apps":[],"jobName":"paragraph_1578908633519_-250048800","id":"20191211-110550_1799909412","dateCreated":"2020-01-13T15:13:53+0530","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:28090"},{"title":"[ Optional ] STEP 7 : Summary statistics on all columns","text":"%jdbc\nexec scala options(returnDF 'df2')\nval df = snappy.table(datasetName)\nval columns = df.columns\nval df1 = df.describe(columns : _*)\ndf1.createOrReplaceTempView(\"tempSummary\")\nval df2 = snappy.sql(\"select * from tempSummary\")\n  ","user":"anonymous","dateUpdated":"2020-01-13T15:13:53+0530","config":{"editorSetting":{"language":"sql","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/sql","fontSize":9,"editorHide":true,"title":true,"results":{"0":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{"columns":[{"name":"summary","visible":true,"width":"*","sort":{},"filters":[{"term":""}],"pinned":""},{"name":"station_id","visible":true,"width":"*","sort":{},"filters":[{}],"pinned":""},{"name":"name","visible":true,"width":"*","sort":{"priority":0,"direction":"desc"},"filters":[{}],"pinned":""},{"name":"lat","visible":true,"width":"*","sort":{},"filters":[{}],"pinned":""},{"name":"long","visible":true,"width":"*","sort":{},"filters":[{}],"pinned":""},{"name":"dockcount","visible":true,"width":"*","sort":{},"filters":[{}],"pinned":""},{"name":"landmark","visible":true,"width":"*","sort":{},"filters":[{}],"pinned":""},{"name":"installation","visible":true,"width":"*","sort":{},"filters":[{}],"pinned":""}],"scrollFocus":{},"selection":[],"grouping":{"grouping":[],"aggregations":[],"rowExpandedStates":{}},"treeView":{},"pagination":{"paginationCurrentPage":1,"paginationPageSize":250}},"tableColumnTypeState":{"updated":false,"names":{"summary":"string","C_CUSTKEY":"string","C_NAME":"string","C_ADDRESS":"string","C_NATIONKEY":"string","C_PHONE":"string","C_ACCTBAL":"string","C_MKTSEGMENT":"string","C_COMMENT":"string"}},"updated":false,"initialized":false,"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false}},"multiBarChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default"}},"commonSetting":{},"keys":[{"name":"summary","index":0,"aggr":"sum"}],"groups":[],"values":[{"name":"station_id","index":1,"aggr":"sum"}]},"helium":{}}},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1578908633519_-861221262","id":"20191204-111618_1265627021","dateCreated":"2020-01-13T15:13:53+0530","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:28091"},{"title":"STEP 8 : Drop the temporary table created for capacity estimation","text":"%jdbc\ndrop table if exists {datasetName}_TOBEDELETED","user":"anonymous","dateUpdated":"2020-01-13T15:13:53+0530","config":{"editorSetting":{"language":"sql","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/sql","fontSize":9,"editorHide":true,"title":true,"results":{"0":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"C0":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}}}},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1578908633519_640524559","id":"20191205-100557_2078362668","dateCreated":"2020-01-13T15:13:53+0530","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:28092"},{"title":"STEP 9 : Execute to clean up variables","text":"%spark\nz.remove(\"datasetName\")\nz.remove(\"path\")\nz.remove(\"dataFormat\")\nz.remove(\"datasetName\")\nz.remove(\"aws_id\")\nz.remove(\"aws_secret\")\nz.remove(\"gcs_idpath\")\nz.remove(\"csv_header\")\nz.remove(\"inferSchema\")\nz.remove(\"mode\")\nz.remove(\"xml_rowTag\")","user":"anonymous","dateUpdated":"2020-01-13T15:13:53+0530","config":{"tableHide":false,"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"editorHide":true,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1578908633519_1630697443","id":"20191110-130622_1989494546","dateCreated":"2020-01-13T15:13:53+0530","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:28093"}],"name":"Snappy/4. Load from files in cloud","id":"2EWUWQMRH","noteParams":{},"noteForms":{},"angularObjects":{"md:shared_process":[],"angular:shared_process":[],"spark:shared_process":[]},"config":{"isZeppelinNotebookCronEnable":false,"looknfeel":"default","personalizedMode":"false"},"info":{}}
