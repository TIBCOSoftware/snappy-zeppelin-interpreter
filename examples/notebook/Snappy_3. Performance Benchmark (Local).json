{"paragraphs":[{"text":"%angular\n<script>\n    function openSnappyPulse(){\n      var proto = window.location.protocol;\n      var currHost = window.location.host;\n      var pulseUrl = proto + '//' + currHost.substring(0, currHost.indexOf(':') + 1) + '5050/dashboard/';\n      window.open(pulseUrl, \"_blank\");\n    }\n</script>\n\n<div style=\"background-color:whitesmoke;\">\n<br>\n <span style=\"font-weight: bold; color:#428bca; cursor:pointer;\" onclick=\"openSnappyPulse();\">Monitoring Console </span>\n<br>\n<a href=\"#/notebook/2ETF88QQF\">Zeppelin Notebook Manager</a>\n<br>\n    \n<h4><b>Quickstarts</b></h4>\n&ensp;<a href=\"#/notebook/quickstart\" >Using Spark Scala API</a>\n<br>\n&ensp;<a href=\"#/notebook/2EVF37179\" >Using SQL</a>\n<br>\n<!-- &ensp;<a href=\"#/notebook/performance\">Performance Benchmark</a> -->\n&ensp;<b><i>Performance Benchmark</i></b>\n<br>\n\n<h4>External Data Sources </h4>\n&ensp;<a href=\"#/notebook/2EU4EJDHJ\">Load from External Data Sources</a>\n<br>\n&ensp;<a href=\"#/notebook/2EU6ZXZQJ\">Manage Connectors</a>\n<br>\n&ensp;<a href=\"#/notebook/2EUZ88BBY\">Data transformation examples</a>\n<br>\n\n<h4> Structured Streaming </h4>\n&ensp;<a href=\"#/notebook/2EUCAD6QP\">Example using file source</a>\n\n<h4> Demos with Big Datasets</h4>\n&ensp;<a href=\"#/notebook/airlineanalytics\">Airline Analytics Demo</a>\n<br>\n&ensp;<a href=\"#/notebook/nyctaxianalytics\">NYC Taxi Analytics Demo</a>\n<br>\n&ensp;<a href=\"#/notebook/2DKKFJNZR\">Performance Benchmark(S3 dataset)</a>\n<br>\n\n<h4>References</h4>\n&ensp;<a href=\"https://tibco-computedb.readthedocs.io/en/enterprise_docv1.2/\" target=\"_blank\">ComputeDB documentation</a>\n<br>\n&ensp;<a href=\"https://zeppelin.apache.org/docs/0.8.2/index.html\" target=\"_blank\">Zeppelin Documentation</a>\n</div>\n\n</div>","user":"anonymous","dateUpdated":"2019-12-18T10:07:47+0530","config":{"tableHide":false,"editorSetting":{"language":"scala","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":2,"editorMode":"ace/mode/undefined","fontSize":9,"editorHide":true,"results":{},"enabled":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"ANGULAR","data":"<script>\n    function openSnappyPulse(){\n      var proto = window.location.protocol;\n      var currHost = window.location.host;\n      var pulseUrl = proto + '//' + currHost.substring(0, currHost.indexOf(':') + 1) + '5050/dashboard/';\n      window.open(pulseUrl, \"_blank\");\n    }\n</script>\n\n<div style=\"background-color:whitesmoke;\">\n<br>\n <span style=\"font-weight: bold; color:#428bca; cursor:pointer;\" onclick=\"openSnappyPulse();\">Monitoring Console </span>\n<br>\n<a href=\"#/notebook/2ETF88QQF\">Zeppelin Notebook Manager</a>\n<br>\n    \n<h4><b>Quickstarts</b></h4>\n&ensp;<a href=\"#/notebook/quickstart\" >Using Spark Scala API</a>\n<br>\n&ensp;<a href=\"#/notebook/2EVF37179\" >Using SQL</a>\n<br>\n<!-- &ensp;<a href=\"#/notebook/performance\">Performance Benchmark</a> -->\n&ensp;<b><i>Performance Benchmark</i></b>\n<br>\n\n<h4>External Data Sources </h4>\n&ensp;<a href=\"#/notebook/2EU4EJDHJ\">Load from External Data Sources</a>\n<br>\n&ensp;<a href=\"#/notebook/2EU6ZXZQJ\">Manage Connectors</a>\n<br>\n&ensp;<a href=\"#/notebook/2EUZ88BBY\">Data transformation examples</a>\n<br>\n\n<h4> Structured Streaming </h4>\n&ensp;<a href=\"#/notebook/2EUCAD6QP\">Example using file source</a>\n\n<h4> Demos with Big Datasets</h4>\n&ensp;<a href=\"#/notebook/airlineanalytics\">Airline Analytics Demo</a>\n<br>\n&ensp;<a href=\"#/notebook/nyctaxianalytics\">NYC Taxi Analytics Demo</a>\n<br>\n&ensp;<a href=\"#/notebook/2DKKFJNZR\">Performance Benchmark(S3 dataset)</a>\n<br>\n\n<h4>References</h4>\n&ensp;<a href=\"https://tibco-computedb.readthedocs.io/en/enterprise_docv1.2/\" target=\"_blank\">ComputeDB documentation</a>\n<br>\n&ensp;<a href=\"https://zeppelin.apache.org/docs/0.8.2/index.html\" target=\"_blank\">Zeppelin Documentation</a>\n</div>\n\n</div>"}]},"apps":[],"jobName":"paragraph_1576643867076_-2122674729","id":"20191206-001504_1158137163","dateCreated":"2019-12-18T10:07:47+0530","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:6956"},{"title":"Let's confirm SnappyData in-memory performance is 7X to 20X faster than Spark caching.","text":"%angular\n<div style=\"background-color:whitesmoke;\">\n<h2>Let's confirm SnappyData in-memory performance is 7X to 20X faster than Spark caching.</h2>\n<ul>\n<li>\nIn this notebook we will walk you through a simple benchmark to compare performance of SnappyData with the performance of Spark 2.1.1. We load millions of rows into a cached Spark DataFrame, run some analytic queries measuring its performance and then do the same using SnappyData's column table. Preferably you should have at least 8GB of RAM reserved for this test. Please go over the <a href=\"#/notebook/quickstart\">Quickstart notebook</a> as a prequisite for syntax used.</li>\n<li> Monitor the Cluster, check memory consumption using <span style=\"font-weight: bold; color:#428bca; cursor:pointer;\" onclick=\"openSnappyPulse();\">Monitoring Console </span> <br>The Dashboard tab can be used to monitor the cluster and check the memory consumed by the samples.</li>\n</ul>\n <h5 style=\"color:red;font-weight:bold\">Anonymous user needs to clone this notebook to execute the paragraphs. Clone option available in the pane next to name of the notebook at the top of the page.</h5>\n</div>\n","user":"anonymous","dateUpdated":"2019-12-18T10:07:47+0530","config":{"tableHide":false,"editorSetting":{"language":"scala","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":10,"editorMode":"ace/mode/undefined","editorHide":true,"fontSize":9,"title":false,"results":[{"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}}],"enabled":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"ANGULAR","data":"<div style=\"background-color:whitesmoke;\">\n<h2>Let's confirm SnappyData in-memory performance is 7X to 20X faster than Spark caching.</h2>\n<ul>\n<li>\nIn this notebook we will walk you through a simple benchmark to compare performance of SnappyData with the performance of Spark 2.1.1. We load millions of rows into a cached Spark DataFrame, run some analytic queries measuring its performance and then do the same using SnappyData's column table. Preferably you should have at least 8GB of RAM reserved for this test. Please go over the <a href=\"#/notebook/quickstart\">Quickstart notebook</a> as a prequisite for syntax used.</li>\n<li> Monitor the Cluster, check memory consumption using <span style=\"font-weight: bold; color:#428bca; cursor:pointer;\" onclick=\"openSnappyPulse();\">Monitoring Console </span> <br>The Dashboard tab can be used to monitor the cluster and check the memory consumed by the samples.</li>\n</ul>\n <h5 style=\"color:red;font-weight:bold\">Anonymous user needs to clone this notebook to execute the paragraphs. Clone option available in the pane next to name of the notebook at the top of the page.</h5>\n</div>"}]},"apps":[],"jobName":"paragraph_1576643867077_-1541160251","id":"20170922-095902_338451451","dateCreated":"2019-12-18T10:07:47+0530","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:6957"},{"title":"Define a function \"benchmark\", which tells us the average time to run queries after doing initial warmups","text":"%snappydata.sql\nexec scala\n\ndef benchmark(name: String, times: Int = 10, warmups: Int = 6)(f: => Unit) {\n          for (i <- 1 to warmups) {\n            f\n          }\n          val startTime = System.nanoTime\n          for (i <- 1 to times) {\n            f\n          }\n          val endTime = System.nanoTime\n          println(s\"Average time taken in $name for $times runs: \" +\n            (endTime - startTime).toDouble / (times * 1000000.0) + \" ms\")\n        }\nval spark = org.apache.spark.sql.SparkSession.builder().appName(\"SnappyBenchmark\").getOrCreate()","user":"anonymous","dateUpdated":"2019-12-18T10:07:47+0530","config":{"tableHide":true,"editorSetting":{"language":"sql","editOnDblClick":false,"completionSupport":true},"colWidth":10,"editorMode":"ace/mode/sql","editorHide":false,"fontSize":9,"title":true,"results":{"0":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"C0":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}}}},"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"C0\nbenchmark: (name: String, times: Int, warmups: Int)(f: => Unit)Unit\nspark: org.apache.spark.sql.SparkSession = org.apache.spark.sql.SnappySession@5f477a0e\n"}]},"apps":[],"jobName":"paragraph_1576643867077_824799375","id":"20161208-173426_1057142313","dateCreated":"2019-12-18T10:07:47+0530","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:6958"},{"title":"Create a DataFrame and temp table using Spark's range method. Cache it in Spark to get optimal performance. This will create a DataFrame of 100 million records","text":"%snappydata.sql\nexec scala\n\nvar testDF = spark.range(100000000).selectExpr(\"id\", \"concat('sym', cast((id % 100) as STRING)) as sym\")\ntestDF.cache\ntestDF.createOrReplaceTempView(\"sparkCacheTable\")","user":"anonymous","dateUpdated":"2019-12-18T10:07:47+0530","config":{"tableHide":false,"editorSetting":{"language":"sql","editOnDblClick":false,"completionSupport":true},"colWidth":12,"editorMode":"ace/mode/sql","editorHide":false,"fontSize":9,"title":true,"results":{"0":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"C0":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}}}},"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1576643867078_1172487390","id":"20161208-173647_1343819618","dateCreated":"2019-12-18T10:07:47+0530","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:6959"},{"title":"Now run a query and to check the performance. Compute average. This will ensure it touches all records while scanning.","text":"%snappydata.sql\nexec scala\n\nbenchmark(\"Spark perf\") {spark.sql(\"select sym, avg(id) from sparkCacheTable group by sym\").collect()}","user":"anonymous","dateUpdated":"2019-12-18T10:07:47+0530","config":{"editorSetting":{"language":"sql","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/sql","editorHide":false,"fontSize":9,"title":true,"results":{"0":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"C0":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}}}},"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1576643867078_-1162815370","id":"20161208-173745_196238312","dateCreated":"2019-12-18T10:07:47+0530","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:6960"},{"title":"Clean up the JVM. This will ensure all in memory artifacts for Spark is cleaned up.","text":"%snappydata.sql\nexec scala\ntestDF.unpersist()\nSystem.gc()\nSystem.runFinalization()","user":"anonymous","dateUpdated":"2019-12-18T10:07:47+0530","config":{"tableHide":true,"editorSetting":{"language":"sql","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/sql","editorHide":true,"fontSize":9,"title":true,"results":{"0":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"C0":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}}}},"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1576643867078_1867623628","id":"20161208-173831_1815673868","dateCreated":"2019-12-18T10:07:47+0530","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:6961"},{"title":"Create a SnappySession.","text":"%snappydata.sql\nexec scala\n\nval snappyTestSession = new org.apache.spark.sql.SnappySession(sc)","user":"anonymous","dateUpdated":"2019-12-18T10:07:47+0530","config":{"editorSetting":{"language":"sql","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/sql","editorHide":false,"fontSize":9,"title":true,"results":{"0":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"C0":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}}}},"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1576643867079_-1725582922","id":"20161208-173904_1370701056","dateCreated":"2019-12-18T10:07:47+0530","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:6962"},{"title":"Create a similar 100 million record DataFrame","text":"%snappydata.sql\nexec scala\n\nval testDF = snappyTestSession.range(100000000).selectExpr(\"id\", \"concat('sym', cast((id % 100) as varchar(10))) as sym\")","user":"anonymous","dateUpdated":"2019-12-18T10:07:47+0530","config":{"editorSetting":{"language":"sql","editOnDblClick":false,"completionSupport":true},"colWidth":12,"editorMode":"ace/mode/sql","editorHide":false,"fontSize":9,"title":true,"results":{"0":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"C0":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}}}},"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1576643867079_864204228","id":"20161208-173941_466027687","dateCreated":"2019-12-18T10:07:47+0530","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:6963"},{"title":"Create the table","text":"%snappydata.sql\nexec scala\n\nsnappy.sql(\"drop table if exists snappyTable\")\nsnappy.sql(\"create table snappyTable (id bigint not null, sym varchar(10) not null) using column\")","user":"anonymous","dateUpdated":"2019-12-18T10:07:47+0530","config":{"editorSetting":{"language":"sql","editOnDblClick":false,"completionSupport":true},"colWidth":12,"editorMode":"ace/mode/sql","editorHide":false,"fontSize":9,"title":true,"results":{"0":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"C0":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}}}},"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1576643867079_-1102085125","id":"20161208-174018_910018763","dateCreated":"2019-12-18T10:07:47+0530","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:6964"},{"title":"Insert the created a DataFrame into the table. Measure its performance","text":"%snappydata.sql\nexec scala\n\nbenchmark(\"Snappy insert perf\", 1, 0) {testDF.write.insertInto(\"snappyTable\") }","user":"anonymous","dateUpdated":"2019-12-18T10:07:47+0530","config":{"editorSetting":{"language":"sql","editOnDblClick":false,"completionSupport":true},"colWidth":12,"editorMode":"ace/mode/sql","editorHide":false,"fontSize":9,"title":true,"results":{"0":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"C0":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}}}},"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1576643867080_1451914009","id":"20161208-174048_109536533","dateCreated":"2019-12-18T10:07:47+0530","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:6965"},{"title":"Now lets run the same benchmark we ran against Spark DataFrame.","text":"%snappydata.sql\nexec scala\n\n// these two properties further optimize this case for SnappyData\nsnappy.conf.set(\"snappydata.sql.useOptimizedHashAggregateForSingleKey\", \"false\")\nsnappy.conf.set(\"snappydata.sql.useDriverCollectForGroupBy\", \"true\")\nbenchmark(\"Snappy perf\") {snappy.sql(\"select sym, avg(id) from snappyTable group by sym\").collect()} ","user":"anonymous","dateUpdated":"2019-12-18T10:07:47+0530","config":{"editorSetting":{"language":"sql","editOnDblClick":false,"completionSupport":true},"colWidth":12,"editorMode":"ace/mode/sql","editorHide":false,"fontSize":9,"title":true,"results":{"0":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"C0":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}}}},"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1576643867080_-1087393540","id":"20161208-174159_2057503632","dateCreated":"2019-12-18T10:07:47+0530","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:6966"},{"title":"","text":"%angular\n<div style=\"background-color:whitesmoke\">\n<h2>Congratulations! You have completed this tutorial.</h2>\n<h3>Next step:</h3>\n<h4>You may <b><a href='#/notebook/2EU4EJDHJ'>load data from external data sources</a></b></h4>\n<h4>Learn more about SnappyData from <b><a href='http://snappydatainc.github.io/snappydata/'>here</a></b></h4>\n<h4>If you're curious to try out more <b><a href='http://snappydatainc.github.io/snappydata/howto/'>examples</a></b> </h4>\n</div>\n","user":"anonymous","dateUpdated":"2019-12-18T10:07:47+0530","config":{"tableHide":false,"editorSetting":{"language":"scala","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/undefined","editorHide":true,"fontSize":9,"title":false,"results":[{"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}}],"enabled":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"ANGULAR","data":"<div style=\"background-color:whitesmoke\">\n<h2>Congratulations! You have completed this tutorial.</h2>\n<h3>Next step:</h3>\n<h4>You may <b><a href='#/notebook/2EU4EJDHJ'>load data from external data sources</a></b></h4>\n<h4>Learn more about SnappyData from <b><a href='http://snappydatainc.github.io/snappydata/'>here</a></b></h4>\n<h4>If you're curious to try out more <b><a href='http://snappydatainc.github.io/snappydata/howto/'>examples</a></b> </h4>\n</div>"}]},"apps":[],"jobName":"paragraph_1576643867080_2022843756","id":"20161214-130706_18117927","dateCreated":"2019-12-18T10:07:47+0530","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:6967"}],"name":"Snappy/3. Performance Benchmark (Local)","id":"2EV26SKSX","noteParams":{},"noteForms":{},"angularObjects":{"angular:shared_process":[]},"config":{"isZeppelinNotebookCronEnable":false,"looknfeel":"default","personalizedMode":"false"},"info":{}}
